name: CI 

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  CI:
    runs-on: ubuntu-latest
    env:
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      TEST_DATABASE_USERNAME: ${{ secrets.TEST_DATABASE_USERNAME }}
      TEST_DATABASE_PASSWORD: ${{ secrets.TEST_DATABASE_PASSWORD }}
      TEST_DATABASE_HOST: ${{ secrets.TEST_DATABASE_HOST}}
      TEST_REDIS_HOST: ${{ secrets.TEST_REDIS_HOST }}
      TEST_REDIS_PORT: ${{ secrets.TEST_REDIS_PORT }}
      TEST_REDIS_PASSWORD: ${{ secrets.TEST_REDIS_PASSWORD }}
      TEST_REDIS_DB: ${{ secrets.TEST_REDIS_DB }}
    steps:
      - uses: actions/checkout@v2
        
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: make log dir
        run: |
          mkdir logs
          
      - name: Test
        run: |
          pytest --cov=./ --cov-report=xml
          
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          files: ./coverage1.xml,./coverage2.xml
          directory: ./coverage/reports/
          flags: unittests
          env_vars: OS,PYTHON
          name: codecov-umbrella
          fail_ci_if_error: true
          path_to_write_report: ./coverage/codecov_report.gz
          
  DOCKER_BUILD_PUSH:
    needs: [CI]
    runs-on: ubuntu-latest
    env:
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
      DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
      DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
      REDIS_HOST: ${{ secrets.REDIS_HOST }}
      REDIS_PORT: ${{ secrets.REDIS_PORT }}
      REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
      REDIS_DB: ${{ secrets.REDIS_DB }}
    steps:
      - uses: actions/checkout@v2
        
      - name: build docker image
        run: docker build -t chateaubriand
      
      - name: publish
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: chateaubriand
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          registry: ${{ secrets.DOCKER_REGISTRY }}
     
